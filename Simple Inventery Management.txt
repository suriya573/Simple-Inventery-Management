CREATE TABLE Items (
    ItemID INT PRIMARY KEY,
    ItemName VARCHAR(100),
    StockLevel INT,
    SupplierID INT
);
CREATE TABLE Suppliers (
    SupplierID INT PRIMARY KEY,
    SupplierName VARCHAR(100),
    ContactEmail VARCHAR(100)
);
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    ItemID INT,
    QuantityOrdered INT,
    OrderDate DATE,
    FOREIGN KEY (ItemID) REFERENCES Items(ItemID)
);
INSERT INTO Items (ItemID, ItemName, StockLevel, SupplierID) VALUES
(1, 'Laptop', 15, 1),
(2, 'Smartphone', 30, 2),
(3, 'Headphones', 25, 1),
(4, 'Chair', 10, 3),
(5, 'Desk', 5, 3);

INSERT INTO Suppliers (SupplierID, SupplierName, ContactEmail) VALUES
(1, 'Tech Suppliers Co.', 'contact@techsuppliers.com'),
(2, 'Mobile World', 'info@mobileworld.com'),
(3, 'Furniture Depot', 'support@furnituredepot.com');

INSERT INTO Orders (OrderID, ItemID, QuantityOrdered, OrderDate) VALUES
(1, 1, 5, '2024-10-01'),
(2, 2, 10, '2024-10-02'),
(3, 3, 7, '2024-10-03'),
(4, 4, 2, '2024-10-05'),
(5, 5, 3, '2024-10-06');


1. List All Items with Stock Levels Below a Certain Threshold
SELECT ItemName, StockLevel
FROM Items
WHERE StockLevel < 10;

2. Retrieve All Orders Placed with a Specific Supplier
SELECT O.OrderID, I.ItemName, O.QuantityOrdered, O.OrderDate
FROM Orders O
JOIN Items I ON O.ItemID = I.ItemID
JOIN Suppliers S ON I.SupplierID = S.SupplierID
WHERE S.SupplierName = 'Tech Suppliers Co.';

3. Find the Total Quantity of Each Item Ordered
SELECT I.ItemName, SUM(O.QuantityOrdered) AS TotalOrdered
FROM Orders O
JOIN Items I ON O.ItemID = I.ItemID
GROUP BY I.ItemName;

4. Retrieve All Suppliers and the Items They Supply
SELECT S.SupplierName, I.ItemName
FROM Suppliers S
JOIN Items I ON S.SupplierID = I.SupplierID;

5. Find Items That Havenâ€™t Been Ordered Recently (Last 30 Days)
SELECT ItemName
FROM Items
WHERE ItemID NOT IN (
    SELECT ItemID
    FROM Orders
    WHERE OrderDate >= NOW() - INTERVAL 30 DAY
);
